import Head from "next/head";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
// hooks
import { useAuth } from "../hooks/useAuth";
import { useAxiosPrivate } from "../hooks/useAxiosPrivate";

export default function Home() {
    const router = useRouter();
    const { auth } = useAuth();
    const axiosPrivate = useAxiosPrivate();

    const [employees, setEmployees] = useState();

    // is authed?
    useEffect(() => {
        if (!auth?.email) {
            router.replace("/login");
        }
    });

    useEffect(() => {
        let isMounted = true;
        const controller = new AbortController();

        // fetch employees
        const getEmployees = async () => {
            try {
                const { data } = await axiosPrivate.get("/employees", {
                    signal: controller.signal,
                });
                console.log(data); // TODO:

                isMounted && setEmployees(data);
            } catch (error) {
                console.error(error);
            }
        };

        getEmployees();

        // clean up
        return () => {
            isMounted = false;
            controller.abort();
        };
    }, []);

    if (!auth?.email) return <div className="Not Allowed" />;

    return (
        <div>
            <Head>
                <title>Employees Page</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className="min-h-screen grid place-items-center">
                <div>
                  <p>Logged in as {auth.email}</p>
                    <ul>
                        {employees &&
                            employees.map((employee) => (
                                <li key={employee._id}>{employee.email}</li>
                            ))}
                    </ul>
                </div>
            </main>
        </div>
    );
}

export function getServerSideProps() {
    return {
        props: {},
    };
}
